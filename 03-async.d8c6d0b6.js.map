{"version":3,"sources":["js/03-async.js"],"names":["getFruit","name","fruits","strawberry","kiwi","apple","Promise","resolve","reject","setTimeout","aMakeSmoothie","console","time","berry","all","log","timeEnd","error"],"mappings":";AAKA,SAASA,EAASC,GACVC,MAAAA,EAAS,CACbC,WAAY,KACZC,KAAM,MACNC,MAAO,MAGF,OAAA,IAAIC,QAAQ,CAACC,EAASC,IAC3BC,WAAW,IAAMF,EAAQL,EAAOD,IAAQ,MAI5C,eAAeS,IACT,IACFC,QAAQC,KAAK,iBACPP,MAAAA,EAAQL,EAAS,SACjBI,EAAOJ,EAAS,QAChBa,EAAQb,EAAS,cAEjBE,QAAeI,QAAQQ,IAAI,CAACT,EAAOD,EAAMS,IAIxCX,OAHPS,QAAQI,IAAIb,GACZS,QAAQK,QAAQ,iBAETd,EACP,MAAOe,GACPN,QAAQI,IAAI,WAIhBL","file":"03-async.d8c6d0b6.js","sourceRoot":"..\\src","sourcesContent":["// Синтаксис async/await\n// Последовательные операции\n// Паралельные операции с Promise.all()\n// try...catch\n\nfunction getFruit(name) {\n  const fruits = {\n    strawberry: '🍓',\n    kiwi: '🥝 ',\n    apple: '🍎',\n  };\n\n  return new Promise((resolve, reject) =>\n    setTimeout(() => resolve(fruits[name]), 500),\n  );\n}\n\nasync function aMakeSmoothie() {\n  try {\n    console.time('aMakeSmoothie');\n    const apple = getFruit('apple');\n    const kiwi = getFruit('kiwi');\n    const berry = getFruit('strawberry');\n\n    const fruits = await Promise.all([apple, kiwi, berry]);\n    console.log(fruits);\n    console.timeEnd('aMakeSmoothie');\n\n    return fruits;\n  } catch (error) {\n    console.log('Ошибка');\n  }\n}\n\naMakeSmoothie();\n\n// async function fn () {}\n\n// const fn  = async function () {}\n\n// const arr = async () => {}\n\n// const x = {\n//   async getname () {}\n// }\n\n// class X {\n//   async getName () {}\n// }\n"]}